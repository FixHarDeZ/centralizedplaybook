# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - '{{vars.groups['instance-alertmanager'][0]}}:9093'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "./rules/*.yml"
  

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']


  - job_name: 'federate_system_aggregate'
    scrape_interval: 20s
    scrape_timeout: 20s
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{__name__=~".+"}'
    metric_relabel_configs:
    - source_labels: [job]
      regex: '(haproxy_exporter_public|haproxy_exporter_partner|haproxy_exporter_private|haproxy_exporter_general)'
      action: drop
    static_configs:
      - targets:
        - '{{vars.groups['instance-prometheus_sys_aggregate'][0]}}:9090'





  - job_name: 'federate_oc_route'
    scrape_interval: 5s
    scrape_timeout: 5s
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job=~"haproxy_.+"}'
    static_configs:
      - targets:
        - '{{vars.groups['instance-prometheus_sys_aggregate'][0]}}:9090'